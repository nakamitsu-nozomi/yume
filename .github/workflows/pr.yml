name: PR
on:
  pull_request:
jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      cache-key: ${{ steps.cache.outputs.key }}
    steps:
      - uses: actions/checkout@v4
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Cache node modules
        uses: actions/cache@v3
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-
      - name: Install dependencies
        run: pnpm i
  lint:
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Restore Cache
        uses: actions/cache@v3
        with:
          path: ~/.pnpm-store
          key: ${{ needs.setup.outputs.cache-key }}
      - name: Run lint
        run: pnpm run lint && pnpm run styleLint
  typecheck:
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Restore Cache
        uses: actions/cache@v3
        with:
          path: ~/.pnpm-store
          key: ${{ needs.setup.outputs.cache-key }}
      - name: Run TypeCheck
        run: pnpm run typecheck
  format:
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Restore Cache
        uses: actions/cache@v3
        with:
          path: ~/.pnpm-store
          key: ${{ needs.setup.outputs.cache-key }}
      - name: Run formatCheck
        run: pnpm run format